=GF Web Service API=

The GF Web Service is a small application which exposes the PGF API as Web Service. The application uses [http://www.fastcgi.com FastCGI] as communication protocol to talk with the web server. The data protocol that we use is [http://www.json.org/ JSON]. Information for how to compile and install the service could be found [LaunchWebDemos here].

A compiled GF grammars could be used in web applications in the same way as JSP, ASP or PHP pages are used. The compiled PGF file is just placed somewhere in the web site directory. When there is a request for access to a .pgf file then the web server redirects the request to the GF web service. The service knows how to load the grammar and interpret the parameters given in the URL.

If my_grammar.pgf is a grammar placed in the root folder of the web site for localhost then the grammar could be accessed using this URL:

`http://localhost/my_grammar.pgf`

Since there aren't any parameters passed in this case, the web service will respond with some general information about the grammar, encoded in JSON format. To perform specific operation you have to tell what operation you want to perform. The operation is encoded in the parameter command i.e.:

`http://localhost/my_grammar.pgf?command=cmd`

where cmd is the name of the operation. Usually every operation also requires specific list of other arguments which are encoded as parameters as well. The list of all supported operations follows:

=Operations=

==Grammar==

|| Parameter || Description                       || Default      ||
|| command   || should be 'grammar'               || -            ||

==Parsing==

|| Parameter || Description                       || Default      ||
|| command   || should be 'parse'                 || -            ||
|| cat       || the start category for the parser || the default start category for the grammar ||
|| input     || the string to be parsed           || empty string ||
|| from      || language to use for parsing       || all languages in the grammar will be tried ||

==Linearization==

|| Parameter || Description                           || Default      ||
|| command   || should be 'linearize'                 || -            ||
|| tree      || the abstract syntax tree to linearize || -            ||
|| to        || language to use in the linearization  || linearizations for all languages in the grammar will be generated ||

==Translation==

|| Parameter || Description                       || Default      ||
|| command   || should be 'translate'             || -            ||
|| cat       || the start category for the parser || the default start category for the grammar ||
|| input     || the string to be translated       || empty string ||
|| from      || the input language                || all languages in the grammar will be tried ||
|| to        || the target language               || linearizations for all languages in the grammar will be generated ||

==Random Generation==

|| Parameter || Description                          || Default      ||
|| command   || should be 'random'                   || -            ||
|| cat       || the start category for the generator || the default start category for the grammar ||
|| limit     || maximal number of trees generated    || 1 ||

==Word Completion==

|| Parameter || Description                       || Default      ||
|| command   || should be 'complete'              || -            ||
|| cat       || the start category for the parser || the default start category for the grammar ||
|| input     || the string to the left of the cursor that is already typed || empty string ||
|| from      || language to use for parsing       || all languages in the grammar will be tried ||
|| limit     || maximal number of trees generated    || all words will be returned ||

==Abstract Syntax Tree Visualization==

|| Parameter || Description                        || Default      ||
|| command   || should be 'abstrtree'              || -            ||
|| tree      || the abstract syntax tree to render || -            ||

==Parse Tree Visualization==

|| Parameter || Description                        || Default      ||
|| command   || should be 'parsetree'              || -            ||
|| tree      || the abstract syntax tree to render || -            ||
|| from      || language to use in the rendering   || -            ||

==Word Alignment Diagram==

|| Parameter || Description                        || Default      ||
|| command   || should be 'alignment'              || -            ||
|| tree      || the abstract syntax tree to render || -            ||